---
import Layout from '@/layouts/Layout.astro';
import Card from '@/components/blog/Card.astro';
import Join from '@/components/Join';
import { formatDate } from '@/utils/blog';

function getYearFromDate(dateString) {
	return new Date(dateString).getFullYear();
}

export async function getStaticPaths() {
	const posts = await import('@/data/data.json');
	const years = [...new Set(posts.default.map(post => new Date(post.date).getFullYear()))];

	return years.map((year: any) => {
		return {
			params: { date: year },
			props: { year },
		};
	});
}

const { year } = Astro.props;
const posts = await import('@/data/data.json');
const filteredPosts = posts.default.filter(post => getYearFromDate(post.date) === year);
const years = [...new Set(posts.default.map(post => new Date(post.date).getFullYear()))];
---

<Layout title='Welcome to Astro.'>
	<div class='container pt-[72px] lg:pt-25'>
		<div class='mb-10 md:mb-20 lg:mb-30'>
			<span class='section-caption'>Our blog</span>
			<h1 class='text-[29px] leading-[38px] sm:text-xl md:text-2xl xl:text-3xl max-w-[605px]'>latest updates <span class='text-gray-3'>on our mission</span></h1>
		</div>

		<nav class='mb-12 dates-wrapper'>
			<ul class='flex gap-6 md:gap-8 scrollbar-hide overflow-auto py-1.5 flex-nowrap dates'>
				<li class='uppercase hover:text-black text-md text-nowrap transition-colors'>
					<a href='/blog/' class={`${year === undefined && 'text-black font-medium underline decoration-2 underline-offset-8'}`}>All</a>
				</li>
				{
					years.map(year => (
						<li class='uppercase hover:text-black text-md text-nowrap transition-colors last:pr-8'>
							<a href={`/blog/${year}`} class={`${year === Astro.props.year && 'text-black font-medium underline decoration-2 underline-offset-8'}`}>
								{year}
							</a>
						</li>
					))
				}
			</ul>
		</nav>

		<ul class='grid md:grid-cols-2 lg:grid-cols-3 gap-x-5 lg:gap-x-[60px] gap-y-20'>
			{
				filteredPosts.map(post => (
					<Card title={post.title} date={formatDate(post.date)} description={post.excerpt} slug={post.slug} image={post.featuredImage ? post.featuredImage.node.mediaItemUrl : '/post-preview.png'} />
				))
			}
		</ul>
	</div>
	<Join client:load />
</Layout>
